name: 'trivy-cve-scan'
description: 'aquasecurity/trivy CVE scan with docker.io login- required when inside Intel intranet to bypass docker.io rate limiting'
inputs:
  container-url:
    description: 'container url to scan'
    required: true
  cve-level:
    description: 'CVE levels to scan, try CRITICAL,HIGH,MEDIUM'
    required: true
    default: 'CRITICAL,HIGH'
  exit-code:
    description: 'if set to 1 will return error on detected CVE'
    required: true
    default: '1'
  dockerio-user:
    description: 'username for docker.io, required to login for pull operation'
    required: true
  dockerio-pass:
    description: 'password for docker.io, required to login for pull operation'
    required: true

runs:
  using: "composite"
  steps:
    - name: login to docker.io, pull image & run trivy CVE scan
      run: |
        echo ${{ inputs.dockerio-pass }} | docker login -u ${{ inputs.dockerio-user }} --password-stdin && \
        docker pull ${{ inputs.container-url }} && \
        docker pull aquasec/trivy:latest && \
        docker pull aquasec/trivy-db:latest && \
        docker run --rm -ehttp_proxy -ehttps_proxy -eno_proxy \
          -v/var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:latest i --timeout 15m --security-checks vuln,config \
            --exit-code ${{ inputs.exit-code }} --ignore-unfixed \
            --severity ${{ inputs.cve-level }} ${{ inputs.container-url }}
        docker logout
      shell: bash
