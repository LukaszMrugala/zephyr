name: FMOS Labgrid CI Pipeline test
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  fmos-labgrid-ci-pipeline:
    if: contains(github.event.pull_request.labels.*.name, 'labgrid') || github.event.workflow_dispatch
    name: '[${{ matrix.name }}] FMOS Labgrid setup'
    defaults:
      run:
        shell: bash
    container:
      image: ${{ matrix.os }}
      env:
        IGK_PRIVATE_KEY: ${{ secrets.IGK_PRIVATE_KEY }}
        HF_PRIVATE_KEY: ${{ secrets.HF_PRIVATE_KEY }}
        http_proxy: 'http://proxy-dmz.intel.com:911'
        https_proxy: 'http://proxy-dmz.intel.com:911'
        USER: sys_tmbuild
    strategy:
      fail-fast: false
      max-parallel: 0
      matrix:
        platform_group: [1, 2, 3, 4, 5, 6]
        include:
          - platform_group: 1
            name: 'IGK: Install and Configure on smoke scope'
            os: ubuntu:20.04
            runner: fmos-guest-ubuntu-12c-igk-debug
            install: true
            coordinator: "ws://admin-fmos.igk.intel.com:80/lg"
            scope: smoke
            configure: true
          - platform_group: 2
            name: 'IGK: No Install and No Configure on smoke scope'
            os: amr-registry.caas.intel.com/zephyrproject/ci-sdk:v0.26.7
            install: false
            runner: fmos-guest-ubuntu-12c-igk-debug
            scope: full
            configure: false
          - platform_group: 3
            name: 'IGK: Install and Configure on full scope'
            os: ubuntu:20.04
            runner: fmos-guest-ubuntu-12c-igk-debug
            install: true
            coordinator: "ws://admin-fmos.igk.intel.com:80/lg"
            scope: full
            configure: true
          - platform_group: 4
            name: 'HF: Install and Configure on smoke scope'
            os: ubuntu:20.04
            runner: guest-thor3-4
            install: true
            coordinator: "ws://admin-fmos.hf.intel.com:80/lg"
            scope: smoke
            configure: true
          - platform_group: 5
            name: 'HF: No install and No Configure on smoke scope'
            os: amr-registry.caas.intel.com/zephyrproject/ci-sdk:v0.26.7
            install: false
            runner: guest-thor3-4
            scope: full
            configure: false
          - platform_group: 6
            name: 'HF: Install and Configure on full scope'
            os: ubuntu:20.04
            runner: guest-thor3-4
            install: true
            coordinator: "ws://admin-fmos.hf.intel.com:80/lg"
            scope: full
            configure: true

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Chown repo files
        if: contains(matrix.os, 'ci-sdk')
        run: |
          sudo chown user:user -R /__w/os.rtos.zephyr.devops.ci/os.rtos.zephyr.devops.ci

      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Setup environment
        if: (! contains(matrix.os, 'ci-sdk'))
        run: |
          apt-get update
          # Setup git
          type -p curl >/dev/null || ( apt update &&  apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg |  dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          &&  chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" |  tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          &&  apt update \
          &&  apt install gh git -y

          apt install -y python3 \
                         python3-dev \
                         python3-pip \
                         openssh-client

          /usr/bin/env python3 -m pip install cryptography \
                                              rust \
                                              pysnmp

      - name: Install labgrid for configuration only step
        if: ${{ matrix.install == false }}
        run: |
          git clone https://github.com/labgrid-project/labgrid.git labgrid-tmp
          cd labgrid-tmp && /usr/bin/env python3 -m pip install .

      - name: Print script help
        run: |
          ./tools/labgrid/prepare-labgrid-env.sh -h
        shell: bash

      - name: Run labgrid installation
        run: |
          eval $(ssh-agent -s) && echo "$IGK_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          # echo "$HF_PRIVATE_KEY" | tr -d '\r' | ssh-add -

          ./tools/labgrid/prepare-labgrid-env.sh -l ${{ matrix.coordinator }} \
                                                 -i ${{ matrix.install }} \
                                                 -s ${{ matrix.scope }} \
                                                 -c ${{ matrix.configure }}
        shell: bash
