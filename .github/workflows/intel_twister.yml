name: 'Run Twister - Intel'
on:
  schedule:
    - cron: '55 5 * * *' # once daily @ 05:55 UTC.
  pull_request:
    branches:
      - main-intel
      - sensor_framework
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  run_twister:
    name: 'Twister subset (${{ matrix.subset }})'
    defaults:
      run:
        shell: bash
    runs-on: fmos-guest-ubuntu-24c
    container:
      image: amr-registry.caas.intel.com/zephyrproject/ci-sdk:v0.26.13
      options: "-v /srv/runner/workspace:/runner/workspace"
      env:
        TOKEN: ${{ secrets.ZEPHYR_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        subset: [1, 2, 3, 4, 5, 6]

    env:
      TWISTER_OPTS: "-v -M -x=USE_CCACHE=0 --inline-logs --retry-failed 3 --retry-interval 60 --force-color --integration"
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.8
    steps:
      - name: Clean
        shell: bash
        run: |
          # set dotglob so rm will remove dot files and dirs - (.west, etc.)
          shopt -s dotglob
          pwd
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          # just to be sure...
          sudo rm -rf *
          ls -la ./
          ls -la /runner/workspace

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Environment Setup
        shell: bash
        run: |
          touch $HOME/.git-credentials
          touch $HOME/.gitconfig
          git config --global user.email "sys_tmbuild@intel.com"
          git config --global user.name "Github Builder CI"
          git config --global credential.helper 'store --file=$HOME/.git-credentials'
          if [ ! -f "/__w/os.rtos.zephyr.zephyr/.west/config" ]; then
            west init -l . || true
          fi
          west config manifest.group-filter -- -fat
          west config --global update.narrow true
          west config --global update.path-cache "/runner/workspace"
          # we need this here because our local manifest does import this repo
          echo -e "https://$TOKEN:$TOKEN@github.com/intel-innersource/drivers.audio.firmware.converged" > $HOME/.git-credentials
          west update --path-cache /runner/workspace  2>&1 1> west.update.log || ( rm -rf ../intel ../modules ../bootloader ../tools && west update --path-cache /runner/workspace)
          for r in `west  list -f {url} | grep intel-innersource | sed 's#https://##'`; do
          echo -e "https://$TOKEN:$TOKEN@$r" >> $HOME/.git-credentials
          done
          # debug
          cat $HOME/.git-credentials
          git config --global --add safe.directory ${PWD}
          west update --path-cache /runner/workspace
          west forall -c 'git reset --hard HEAD'

      - name: Build
        run: |

          export PATH=$PATH:/opt/tools/bin/

          export ZEPHYR_TOOLCHAIN_VARIANT=zephyr
          ./scripts/twister \
            ${TWISTER_OPTS} \
            --quarantine-list .github/data/twister-quarantine-list.yml \
            --test-config .github/data/test_config.yaml \
            --subset  ${{matrix.subset}}/${{strategy.job-total}}\
            -T tests \
            -e cmsis_dsp \
            -e mcumgr


      - name: Save Artifacts
        if: failure() || success()
        uses: actions/upload-artifact@v3.1.3
        with:
          name: artifacts_${{ matrix.subset }}_${{ matrix.toolchain }}
          path: |
            twister-out/twister.log
            twister-out/twister.xml
            twister-out/twister.json
          retention-days: 14

  publish-test-results:
    container:
      image: amr-registry.caas.intel.com/zephyrproject/ci-sdk:v0.26.13
      env:
        TOKEN: ${{ secrets.ZEPHYR_TOKEN }}
    env:
      ELASTICSEARCH_KEY: ${{ secrets.ELASTICSEARCH_KEY }}
      ELASTICSEARCH_SERVER: 'https://reports-fmos.hf.intel.com:9200'
      BRANCH_NAME: ${{ github.event_name == 'schedule' && 'master' || 'master_pr' }}
      STATIC_REPORTS_SERVER: 'static-reports-fmos.igk.intel.com'
      STATIC_REPORTS_USER: 'zephyr'
    name: 'Publish Twister Results'
    needs: [run_twister]
    runs-on: fmos-guest-ubuntu-12c
    continue-on-error: true
    if: success() || failure()
    steps:
      - name: Get current date
        id: run_date
        run: |
          echo "run_date=$(date --iso-8601=minutes)" >> $GITHUB_OUTPUT
          echo "run_date_short=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Clean and Pre Environment
        run: |
          rm -rf artifacts
          pip3 install elasticsearch

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          path: artifacts

      - name: Upload to Static Report Server - Clean and Pre Environment
        if: github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'pull_request'
        id: srs-prep-data
        run: |
          rm -rf ${{ steps.run_date.outputs.run_date_short }}
          cp -r artifacts ${{ steps.run_date.outputs.run_date_short }}

      - name: Upload to Static Report Server - Upload
        uses: intel-innersource/os.rtos.zephyr.devops.ci/actions/fmos-scp-ssh-pipeline@fmos-scp-ssh-pipeline-v1.1
        if: ( github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'pull_request') && steps.srs-prep-data.outcome == 'success'
        with:
          hostname: ${{ env.STATIC_REPORTS_SERVER }}
          ssh-user: ${{ env.STATIC_REPORTS_USER }}
          ssh-key: ${{ secrets.IGK_PRIVATE_KEY }}
          ssh-pre: |
            'if [[ ! -d "/media/dskpool/ws-ztest/zephyrproject/daily_report/sumreport/${{ env.BRANCH_NAME }}/" ]]; then \
            mkdir -p /media/dskpool/ws-ztest/zephyrproject/daily_report/sumreport/${{ env.BRANCH_NAME }}/; fi'
          scp-src: '${{ steps.run_date.outputs.run_date_short }}/'
          scp-dst: '/media/dskpool/ws-ztest/zephyrproject/daily_report/sumreport/${{ env.BRANCH_NAME }}/'

      - name: Upload to Static Report Server - Clean
        if: ( github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'pull_request') && steps.srs-prep-data.outcome == 'success'
        run: |
          rm -rf ${{ steps.run_date.outputs.run_date_short }}

      - name: Publish Unit Test Results
        uses: intel-innersource/os.rtos.zephyr.devops.ci/actions/results-publisher@main
        with:
          files: 'artifacts/**/twister.xml'
          check_name: 'Test Results using twister'
          comment_mode: off
          compare_to_earlier_commit: false

      - name: Upload to ElasticSearch Instance scheduled
        if: github.event_name == 'schedule'
        run: |
          echo ${{ steps.run_date.outputs.run_date }}
          python3 ./scripts/ci/upload_test_results_es.py -r ${{ steps.run_date.outputs.run_date }} \
            -i zephyr-tests-main-intel-daily-1 artifacts/**/twister.json
          python3 ./scripts/ci/upload_test_results_es.py -r ${{ steps.run_date.outputs.run_date }} \
            -i zephyr-tests-main-intel-daily-nested artifacts/**/twister.json

      - name: Upload to ElasticSearch Instance on PR
        if: github.event_name == 'pull_request'
        run: |
          echo ${{ steps.run_date.outputs.run_date }}
          python3 ./scripts/ci/upload_test_results_es.py -r ${{ steps.run_date.outputs.run_date }} \
            -i zephyr-tests-staging-1 artifacts/**/twister.json

  # "Intel-CI-Passed" is our exit job that matches branch-protection status-check
  # settings for PR workflow. Make sure all required tests are prereqs to this job.
  # For this build workflow, no actions are taken by Intel-CI-Passed, just status
  # echo.
  Intel-CI-Passed:
    needs: [run_twister]
    runs-on: fmos-guest-ubuntu-12c
    steps:
      - name: Post run steps
        run: echo "Intel-CI-Passed"
